<%- include('partials/header') %>
<%- include('partials/editors_nav') %>
<div class="container my-5">
  <h1 class="d-flex align-items-center gap-3 flex-wrap flex-column flex-md-row align-items-md-end">
    <span><%= post ? 'Beitrag bearbeiten' : 'Neuen Beitrag erstellen' %></span>
    <span class="small text-muted">/ Editors</span>
  </h1>
  <form action="<%= post ? '/editors/posts/edit/' + post.id : '/editors/posts/new' %>" method="POST" onsubmit="return syncEditors()" class="row g-4">
    <input type="hidden" name="_csrf" value="<%= csrfToken %>">
    <div class="col-12 col-lg-8">
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center flex-wrap gap-2">
          <span>Inhalt</span>
          <div class="btn-group btn-group-sm">
            <button type="button" id="btnWhatsNew" class="btn btn-outline-primary">Research News</button>
            <button type="button" id="btnSample" class="btn btn-outline-secondary">Sample</button>
            <button type="button" id="btnTranslate" class="btn btn-outline-secondary">DE→EN</button>
          </div>
        </div>
        <div class="card-body">
          <div class="mb-3">
            <label class="form-label">Titel (DE)</label>
            <input name="title" id="title_de" class="form-control" value="<%= post ? post.title : '' %>" required>
          </div>
          <div class="mb-3">
            <label class="form-label">Inhalt (DE) (HTML erlaubt)</label>
            <textarea name="content" id="content_de" class="form-control" rows="14"><%= post ? (post.content || '') : '' %></textarea>
          </div>
          <hr>
          <div class="mb-3">
            <label class="form-label">Titel (EN)</label>
            <input name="title_en" id="title_en" class="form-control" value="<%= post ? (post.title_en || '') : '' %>">
          </div>
            <div class="mb-3">
            <label class="form-label">Inhalt (EN)</label>
            <textarea name="content_en" id="content_en" class="form-control" rows="10"><%= post ? (post.content_en || '') : '' %></textarea>
          </div>
          <div class="mb-3">
            <label class="form-label">Teaser (DE, max 180 Zeichen)</label>
            <textarea name="whatsnew" id="whatsnew" class="form-control" maxlength="180" rows="2"><%= post ? (post.whatsnew || '') : '' %></textarea>
            <div class="small text-muted d-flex justify-content-between"><span>Research News generiert Titel + Inhalt (DE) und optional Teaser.</span><span id="teaserCounter">0</span></div>
          </div>
        </div>
      </div>
      <div class="card mb-4">
        <div class="card-header d-flex justify-content-between align-items-center">SEO <button type="button" id="btnSeoFromContent" class="btn btn-sm btn-outline-secondary">Ableiten</button></div>
        <div class="card-body row g-3">
          <div class="col-12">
            <label class="form-label">SEO Titel</label>
            <input name="seo_title" class="form-control" maxlength="255" value="<%= post ? (post.seo_title || '') : '' %>">
          </div>
          <div class="col-12">
            <label class="form-label">SEO Beschreibung</label>
            <textarea name="seo_description" id="seo_description" class="form-control" rows="2" maxlength="255"><%= post ? (post.seo_description || '') : '' %></textarea>
            <div class="small text-muted d-flex justify-content-between"><span>Empfohlen 155-160.</span><span id="seoDescCounter">0</span></div>
          </div>
          <div class="col-12">
            <label class="form-label">Meta Keywords (Komma)</label>
            <input name="meta_keywords" class="form-control" value="<%= post ? (post.meta_keywords || '') : '' %>">
          </div>
        </div>
      </div>
    </div>
    <div class="col-12 col-lg-4">
      <div class="card mb-4">
        <div class="card-header">Meta</div>
        <div class="card-body row g-3">
          <div class="col-12">
            <label class="form-label">Status</label>
            <select name="status" class="form-select">
              <option value="draft" <%= !post || post.status==='draft' ? 'selected' : '' %>>Entwurf</option>
              <option value="published" <%= post && post.status==='published' ? 'selected' : '' %>>Veröffentlicht</option>
            </select>
          </div>
          <div class="col-12">
            <label class="form-label">Veröffentlichungsdatum</label>
            <input type="datetime-local" name="published_at" class="form-control" value="<%= post && post.published_at ? new Date(post.published_at).toISOString().slice(0,16) : '' %>">
          </div>
          <div class="col-12">
            <label class="form-label">Tags (Komma)</label>
            <input name="tags" id="tags" class="form-control" value="<%= post && post.tags ? post.tags : '' %>">
          </div>
          <div class="col-12 d-grid gap-2 mt-3">
            <button class="btn btn-primary" type="submit">Speichern</button>
            <a class="btn btn-outline-secondary" href="/editors/posts">Zurück</a>
            <% if (post) { %><a class="btn btn-outline-secondary" href="/blog/<%= post.slug %>" target="_blank">Live ansehen</a><% } %>
          </div>
        </div>
      </div>
    </div>
  </form>
</div>
<%- include('partials/footer') %>
<script>
function syncEditors(){ return true; }
(function(){
  const whatsBtn=document.getElementById('btnWhatsNew');
  const sampleBtn=document.getElementById('btnSample');
  const translateBtn=document.getElementById('btnTranslate');
  const teaser=document.getElementById('whatsnew');
  const teaserCounter=document.getElementById('teaserCounter');
  function updTeaser(){ if(teaserCounter) teaserCounter.textContent = (teaser.value||'').length + ' / 180'; }
  if(teaser){ teaser.addEventListener('input', ()=>{ if(teaser.value.length>180) teaser.value=teaser.value.slice(0,180); updTeaser(); }); updTeaser(); }
  async function call(endpoint, opts){
    const resp = await fetch(endpoint, { method:'POST', headers:{ 'CSRF-Token': '<%= csrfToken %>', 'Content-Type': (opts&&opts.body?'application/json':'text/plain') }, body: opts&&opts.body? JSON.stringify(opts.body):undefined });
    const data = await resp.json().catch(()=>({}));
    if(!resp.ok) throw new Error(data.error||('HTTP '+resp.status));
    return data;
  }
  if(whatsBtn){ whatsBtn.addEventListener('click', async ()=>{
    const orig=whatsBtn.textContent; whatsBtn.disabled=true; whatsBtn.textContent='…';
    try { const data = await call('/editors/generate-whats-new');
      if(data.title_de) document.getElementById('title_de').value=data.title_de;
      if(data.content_de) document.getElementById('content_de').value=data.content_de;
      if(!teaser.value && data.stage1){ const short=data.stage1.replace(/\n+/g,' ').slice(0,180); teaser.value=short; }
      updTeaser();
      whatsBtn.textContent='Fertig'; whatsBtn.classList.add('btn-success');
      setTimeout(()=>{ whatsBtn.disabled=false; whatsBtn.textContent=orig; whatsBtn.classList.remove('btn-success'); },1500);
    } catch(e){ whatsBtn.textContent='Fehler'; whatsBtn.classList.add('btn-danger'); setTimeout(()=>{ whatsBtn.disabled=false; whatsBtn.textContent=orig; whatsBtn.classList.remove('btn-danger'); },1800);} }); }
  if(sampleBtn){ sampleBtn.addEventListener('click', async ()=>{
    const orig=sampleBtn.textContent; sampleBtn.disabled=true; sampleBtn.textContent='…';
    try { const data = await call('/editors/posts/generate-sample');
      if(data.title_de) document.getElementById('title_de').value=data.title_de;
      if(data.content_de) document.getElementById('content_de').value=data.content_de;
      document.getElementById('title_en').value=''; document.getElementById('content_en').value='';
      sampleBtn.textContent='Fertig'; sampleBtn.classList.add('btn-success');
      setTimeout(()=>{ sampleBtn.disabled=false; sampleBtn.textContent=orig; sampleBtn.classList.remove('btn-success'); },1500);
    } catch(e){ sampleBtn.textContent='Fehler'; sampleBtn.classList.add('btn-danger'); setTimeout(()=>{ sampleBtn.disabled=false; sampleBtn.textContent=orig; sampleBtn.classList.remove('btn-danger'); },1800);} }); }
  if(translateBtn){ translateBtn.addEventListener('click', async ()=>{
    const orig=translateBtn.textContent; translateBtn.disabled=true; translateBtn.textContent='…';
    try { const title=document.getElementById('title_de').value; const body=document.getElementById('content_de').value; const prompt=`Translate the following German blog post title and HTML body into English. Keep basic HTML tags intact. Respond as JSON: { \"title\": \"...\", \"content\": \"...\" }.\n\nGerman Title: ${title}\n\nGerman HTML Content:\n${body}`; const data= await call('/editors/api/translate',{ body:{ text: prompt }}); const parsed= JSON.parse(data.translation); document.getElementById('title_en').value=parsed.title||''; document.getElementById('content_en').value=parsed.content||''; translateBtn.textContent='Fertig'; translateBtn.classList.add('btn-success'); setTimeout(()=>{ translateBtn.disabled=false; translateBtn.textContent=orig; translateBtn.classList.remove('btn-success'); },1500);} catch(e){ translateBtn.textContent='Fehler'; translateBtn.classList.add('btn-danger'); setTimeout(()=>{ translateBtn.disabled=false; translateBtn.textContent=orig; translateBtn.classList.remove('btn-danger'); },1800);} }); }
  // SEO Ableiten
  const seoBtn=document.getElementById('btnSeoFromContent');
  const seoDesc=document.getElementById('seo_description');
  const seoDescCounter=document.getElementById('seoDescCounter');
  function updSeo(){ if(!seoDescCounter) return; const len=(seoDesc.value||'').length; seoDescCounter.textContent=len+' / 160'; seoDescCounter.classList.toggle('text-danger',len>170); }
  if(seoDesc){ seoDesc.addEventListener('input', updSeo); updSeo(); }
  if(seoBtn){ seoBtn.addEventListener('click',()=>{ const title=document.getElementById('title_de'); const seoTitle=document.querySelector('input[name="seo_title"]'); if(title && seoTitle && !seoTitle.value) seoTitle.value=title.value.slice(0,60); if(seoDesc && !seoDesc.value){ let text=(document.getElementById('content_de').value||'').replace(/<[^>]*>/g,' ').replace(/\s+/g,' ').trim(); let snip=text.slice(0,160); const lastDot=snip.lastIndexOf('.'); if(lastDot>70) snip=snip.slice(0,lastDot+1); seoDesc.value=snip; updSeo(); } }); }
})();
</script>
