/* Advanced Pages Builder (Enhanced v2)
 * Features added:
 * - Extended styling (text/background colors, custom classes) for text/html blocks
 * - New block types: hero (full-width banner), post-link, podcast-link
 * - Post & Podcast pickers (simple modal lists via new /admin/api/... endpoints)
 * - Image picker re-used for hero + image blocks
 * - Basic inline formatting toolbar retained (execCommand)
 * - (v2.1) Undo/Redo history, autosave draft, quick move/clone buttons
 * - (v2.1) Media picker filter & sort, spacing + visibility flags, templates
 */
(function(){
  // Dynamic base (supports migrated /editors namespace)
  var __AP_BASE = (location.pathname.startsWith('/editors')) ? '/editors' : '/admin';
  const builderEl = document.getElementById('apBuilder'); if(!builderEl) return;
  const layout = window.__AP_INITIAL_LAYOUT || {version:2,rows:[]};
  const layoutInput = document.getElementById('apLayoutInput');
  const jsonToggleBtn = document.getElementById('apJSONToggle');
  const jsonWrapper = document.getElementById('apJsonWrapper');
  const jsonTextarea = document.getElementById('apJsonTextarea');
  const titleInput = document.getElementById('apTitle');
  const slugInput = document.getElementById('apSlug');
  const controlsBar = document.querySelector('.d-flex.flex-wrap.gap-2');
  const i18n = window.__AP_I18N || {};

  // Auto-generate slug
  if(!slugInput.value){ titleInput.addEventListener('input',()=>{ slugInput.value = titleInput.value.trim().toLowerCase().replace(/\s+/g,'-').replace(/[^a-z0-9\-]/g,''); }); }

  // History & autosave
  const history = { stack:[], index:-1, push(state){ const s=JSON.stringify(state); if(this.index>=0 && this.stack[this.index]===s) return; if(this.index < this.stack.length-1) this.stack=this.stack.slice(0,this.index+1); this.stack.push(s); if(this.stack.length>50) this.stack.shift(); this.index=this.stack.length-1; updateUndoRedoButtons(); }, canUndo(){return this.index>0;}, canRedo(){return this.index < this.stack.length-1;}, undo(){ if(!this.canUndo()) return; this.index--; updateUndoRedoButtons(); return JSON.parse(this.stack[this.index]); }, redo(){ if(!this.canRedo()) return; this.index++; updateUndoRedoButtons(); return JSON.parse(this.stack[this.index]); } };
  // Autosave key: stable when editing an existing page (slug present),
  // but unique per-load for brand-new pages to avoid reusing a shared 'new' draft.
  let AUTOSAVE_KEY;
  if(slugInput && slugInput.value){
    AUTOSAVE_KEY = 'ap_draft_' + slugInput.value;
  } else {
    AUTOSAVE_KEY = 'ap_draft_new_' + Date.now();
  }
  let autosaveTimer = null;
  (function restoreDraft(){ try { const raw = localStorage.getItem(AUTOSAVE_KEY); if(raw){ const parsed = JSON.parse(raw); if(parsed && Array.isArray(parsed.rows)){ layout.rows = parsed.rows; } } } catch(_){} })();
  function scheduleAutosave(){ clearTimeout(autosaveTimer); autosaveTimer=setTimeout(()=>{ try { localStorage.setItem(AUTOSAVE_KEY, serialize()); } catch(_){} },1200); }

  function presetColumns(preset){ switch(preset){ case 'full': return [{width:12,blocks:[]}]; case 'two-equal': return [{width:6,blocks:[]},{width:6,blocks:[]}]; case 'two-67-33': return [{width:8,blocks:[]},{width:4,blocks:[]}]; case 'two-33-67': return [{width:4,blocks:[]},{width:8,blocks:[]}]; case 'three': return [{width:4,blocks:[]},{width:4,blocks:[]},{width:4,blocks:[]}]; default: return [{width:12,blocks:[]}]; } }
  function addRow(preset){ layout.rows.push({ preset, columns: presetColumns(preset) }); render(); capture(); }
  function addBlock(rowIndex,colIndex,type){ const col = layout.rows[rowIndex].columns[colIndex]; const id='b'+Date.now()+Math.floor(Math.random()*1000); let block; switch(type){ case 'image': block={id,type:'image',src:'/uploads/Panda_Banner.png',alt:'',caption:''}; break; case 'background': block={id,type:'background',bgColor:'#f5f5f5',padding:'40px 20px',html:'<h3>Section Titel</h3><p>Inhalt…</p>'}; break; case 'text': block={id,type:'text',html:'<p>Textblock</p>', textColor:'', bgColor:'', classes:'', spacing:'', hideSM:false, hideMD:false, hideLG:false}; break; case 'post-link': block={id,type:'post-link',postId:null,title:'(Post auswählen)',slug:'',excerpt:''}; break; case 'podcast-link': block={id,type:'podcast-link',podcastId:null,title:'(Podcast auswählen)',description:''}; break; case 'hero': block={id,type:'hero',image:'',title:'Hero Titel',subtitle:'Untertitel',ctaText:'',ctaUrl:'',overlayOpacity:0.5,height:'60vh',align:'center'}; break; default: block={id,type:'html',html:'<p>Neuer Block</p>'}; }
    col.blocks.push(block); render(); capture(); setTimeout(()=>{ const el=builderEl.querySelector(`[data-block='${id}'] .ap-block-editable`); if(el){ el.focus(); selectAll(el); } },60);} 
  function deleteBlock(rowIndex,colIndex,blockId){ const col=layout.rows[rowIndex].columns[colIndex]; col.blocks=col.blocks.filter(b=>b.id!==blockId); render(); capture(); }
  function moveRow(rowIndex,dir){ const ni=rowIndex+dir; if(ni<0||ni>=layout.rows.length) return; const tmp=layout.rows[rowIndex]; layout.rows[rowIndex]=layout.rows[ni]; layout.rows[ni]=tmp; render(); capture(); }
  function deleteRow(rowIndex){ layout.rows.splice(rowIndex,1); render(); capture(); }

  function updateFromEditors(){ builderEl.querySelectorAll('.ap-block').forEach(blockEl=>{ const blockId=blockEl.getAttribute('data-block'); const editable=blockEl.querySelector('.ap-block-editable'); if(!blockId||!editable) return; for(const row of layout.rows){ for(const col of row.columns){ const blk=col.blocks.find(b=>b.id===blockId); if(blk){ blk.html=editable.innerHTML; } } } }); }
  function serialize(){ updateFromEditors(); return JSON.stringify(layout); }
  function syncHidden(){ layoutInput.value = serialize(); }
  function capture(){ history.push(JSON.parse(JSON.stringify(layout))); scheduleAutosave(); }
  function selectAll(el){ const r=document.createRange(); r.selectNodeContents(el); const s=window.getSelection(); s.removeAllRanges(); s.addRange(r); }

  function render(){ syncHidden(); builderEl.innerHTML=''; layout.rows.forEach((row,rowIndex)=>{ const rowWrap=document.createElement('div'); rowWrap.className='ap-row position-relative mb-4'; const rowToolbar=document.createElement('div'); rowToolbar.className='ap-builder-row-toolbar'; rowToolbar.innerHTML=`<div class="btn-group btn-group-sm"><button type="button" class="btn btn-outline-secondary ap-row-up" ${rowIndex===0?'disabled':''}>&uarr;</button><button type="button" class="btn btn-outline-secondary ap-row-down" ${rowIndex===layout.rows.length-1?'disabled':''}>&darr;</button><button type="button" class="btn btn-outline-danger ap-row-del">X</button></div> <span class="badge bg-info ap-mini-badge">${row.preset}</span>`; rowWrap.appendChild(rowToolbar); const rowContent=document.createElement('div'); rowContent.className='row g-3'; row.columns.forEach((col,colIndex)=>{ const colDiv=document.createElement('div'); colDiv.className=`col-md-${col.width}`; const inner=document.createElement('div'); inner.className='ap-builder-col'; col.blocks.forEach(block=>{ const blockDiv=document.createElement('div'); blockDiv.className='ap-block'; blockDiv.setAttribute('data-block',block.id); let bodyHTML=''; if(block.type==='image'){ bodyHTML=`<div class='ap-block-image-wrapper text-center'><img src='${block.src||''}' alt='${block.alt||''}' style='max-width:100%;height:auto;'/><div class='small text-muted mt-1'>${block.caption||''}</div></div>`; } else if(block.type==='background'){ bodyHTML=`<div class='ap-block-bg-inner' style='background:${block.bgColor||'#f5f5f5'};padding:${block.padding||'20px'};'><div class='ap-block-editable' contenteditable='true'>${block.html||''}</div></div>`; } else if(block.type==='post-link'){ bodyHTML=`<div class='ap-block-link-preview'><div class='small text-muted'>Post Link</div><strong>${escapeHtml(block.title||'(kein Titel)')}</strong><div class='text-muted small'>${escapeHtml(block.slug||'')}</div></div>`; } else if(block.type==='podcast-link'){ bodyHTML=`<div class='ap-block-link-preview'><div class='small text-muted'>Podcast Link</div><strong>${escapeHtml(block.title||'(kein Titel)')}</strong></div>`; } else if(block.type==='hero'){ bodyHTML=`<div class='ap-block-hero-preview text-center p-3' style='background:#222;color:#fff;min-height:140px;display:flex;flex-direction:column;justify-content:center;'><div class='small text-uppercase text-muted'>Hero</div><div class='fw-bold'>${escapeHtml(block.title||'Hero Titel')}</div><div class='small'>${escapeHtml(block.subtitle||'')}</div></div>`; } else { const styleInline=`${block.textColor?`color:${block.textColor};`:''}${block.bgColor?`background:${block.bgColor};`:''}`; bodyHTML=`<div class='ap-block-editable ${block.spacing||''} ${block.hideSM?'d-none d-sm-block':''} ${block.hideMD?'d-sm-none d-md-block':''} ${block.hideLG?'d-lg-none':''}' contenteditable='true' style='${styleInline}'>${block.html||''}</div>`; }
        blockDiv.innerHTML=`<div class='ap-block-toolbar d-flex flex-wrap gap-1'><span class='badge bg-secondary'>${block.type}</span><div class='btn-group btn-group-sm me-auto'><button type='button' class='btn btn-outline-secondary ap-block-collapse' title='Ein-/Ausblenden'>&minus;</button><button type='button' class='btn btn-outline-danger ap-block-delete' title='Löschen'>&times;</button></div>${(block.type==='html'||block.type==='text')?`<div class='btn-group btn-group-sm ap-mini-format' data-block='${block.id}'><button type='button' data-cmd='bold' class='btn btn-outline-secondary'>B</button><button type='button' data-cmd='italic' class='btn btn-outline-secondary'><em>I</em></button><button type='button' data-cmd='h2' class='btn btn-outline-secondary'>H2</button><button type='button' data-cmd='ul' class='btn btn-outline-secondary'>&bull; List</button></div>`:''}<div class='btn-group btn-group-sm ap-quick-actions'><button type='button' class='btn btn-outline-secondary ap-block-move-up' title='Move Up'>&uarr;</button><button type='button' class='btn btn-outline-secondary ap-block-move-down' title='Move Down'>&darr;</button><button type='button' class='btn btn-outline-secondary ap-block-clone' title='Clone'>⧉</button></div><button type='button' class='btn btn-sm btn-outline-info ap-block-config' data-block='${block.id}'>Config</button></div><div class='ap-block-content'>${bodyHTML}</div>`; inner.appendChild(blockDiv); }); const addBtn=document.createElement('div'); addBtn.className='d-flex gap-2 flex-wrap mt-1'; ['html','text','image','background','post-link','podcast-link','hero'].forEach(tp=>{ const b=document.createElement('button'); b.type='button'; b.className='btn btn-sm btn-outline-primary'; b.textContent='+ '+(i18n['add.'+tp]||tp); b.addEventListener('click',()=>addBlock(rowIndex,colIndex,tp)); addBtn.appendChild(b); }); inner.appendChild(addBtn); colDiv.appendChild(inner); rowContent.appendChild(colDiv); }); rowWrap.appendChild(rowContent); builderEl.appendChild(rowWrap); rowToolbar.querySelector('.ap-row-up').addEventListener('click',()=>moveRow(rowIndex,-1)); rowToolbar.querySelector('.ap-row-down').addEventListener('click',()=>moveRow(rowIndex,1)); rowToolbar.querySelector('.ap-row-del').addEventListener('click',()=>deleteRow(rowIndex)); }); }

  // Delegated events
  builderEl.addEventListener('click', e=>{ const delBtn=e.target.closest('.ap-block-delete'); if(delBtn){ const blk=delBtn.closest('.ap-block'); if(!blk) return; const id=blk.getAttribute('data-block'); layout.rows.forEach((r,ri)=>r.columns.forEach((c,ci)=>{ if(c.blocks.find(b=>b.id===id)) deleteBlock(ri,ci,id); })); return; } const colBtn=e.target.closest('.ap-block-collapse'); if(colBtn){ const blk=colBtn.closest('.ap-block'); const content=blk.querySelector('.ap-block-content'); if(!content) return; const hidden=content.style.display==='none'; content.style.display=hidden?'':'none'; return; } const cloneBtn=e.target.closest('.ap-block-clone'); if(cloneBtn){ const id = cloneBtn.closest('.ap-block').getAttribute('data-block'); cloneBlockById(id); return; } const mvUp=e.target.closest('.ap-block-move-up'); if(mvUp){ moveBlock(mvUp.closest('.ap-block').getAttribute('data-block'), -1); return; } const mvDown=e.target.closest('.ap-block-move-down'); if(mvDown){ moveBlock(mvDown.closest('.ap-block').getAttribute('data-block'), 1); return; } const fmtBtn=e.target.closest('.ap-mini-format button'); if(fmtBtn){ const cmd=fmtBtn.getAttribute('data-cmd'); const blockId=fmtBtn.closest('.ap-mini-format').dataset.block; const blkEl=builderEl.querySelector(`.ap-block[data-block='${blockId}'] .ap-block-editable`); if(!blkEl) return; blkEl.focus(); document.execCommand('styleWithCSS', false, true); if(cmd==='bold') document.execCommand('bold'); else if(cmd==='italic') document.execCommand('italic'); else if(cmd==='h2') document.execCommand('formatBlock', false, 'h2'); else if(cmd==='ul') document.execCommand('insertUnorderedList'); syncHidden(); return; } const cfgBtn=e.target.closest('.ap-block-config'); if(cfgBtn){ openConfig(cfgBtn.getAttribute('data-block')); return; } });

  function openConfig(blockId){ let targetBlock; outer: for(const r of layout.rows){ for(const c of r.columns){ const f=c.blocks.find(b=>b.id===blockId); if(f){ targetBlock=f; break outer; } } } if(!targetBlock) return; document.querySelectorAll('.ap-config-sidepanel').forEach(p=>p.remove()); const html=`<div class='ap-config-sidepanel-inner'><header><span id='apPanelTitle'>Konfiguration: ${targetBlock.type}</span><button type='button' aria-label='Schließen' class='btn btn-sm btn-outline-secondary ap-sp-close' data-close>&times;</button></header><div class='ap-config-body'>${targetBlock.type==='image'?`<label>Bild URL</label><input aria-label='Bild URL' type='text' class='form-control form-control-sm ap-cfg-src' value='${targetBlock.src||''}'><label>ALT</label><input type='text' aria-label='Alternativtext' class='form-control form-control-sm ap-cfg-alt' value='${targetBlock.alt||''}'><label>Caption</label><input type='text' class='form-control form-control-sm ap-cfg-caption' value='${targetBlock.caption||''}'><button type='button' class='btn btn-sm btn-outline-primary mt-3 w-100 ap-cfg-pick'>Aus Medien wählen</button>`:''}${targetBlock.type==='background'?`<label>Hintergrundfarbe</label><input type='color' aria-label='Hintergrundfarbe' class='form-control form-control-color ap-cfg-bg' value='${targetBlock.bgColor||'#f5f5f5'}'><div class='small text-muted mt-2'>Padding wird später ergänzt.</div>`:''}${(targetBlock.type==='html'||targetBlock.type==='text')?`<div class='small text-muted mb-2'>Rich Text direkt im Block editieren.</div><label>Textfarbe</label><input type='color' aria-label='Textfarbe' class='form-control form-control-color ap-cfg-textcolor' value='${targetBlock.textColor||'#000000'}'><label>Hintergrund</label><input aria-label='Hintergrundfarbe' type='color' class='form-control form-control-color ap-cfg-bgc' value='${targetBlock.bgColor||'#ffffff'}'><label>CSS Klassen</label><input aria-label='CSS Klassen' type='text' class='form-control form-control-sm ap-cfg-classes' value='${targetBlock.classes||''}' placeholder='z.B. lead fw-bold'><label>Spacing</label><select aria-label='Spacing' class='form-select form-select-sm ap-cfg-spacing'>${['','pad-s','pad-m','pad-l'].map(sp=>`<option value='${sp}' ${targetBlock.spacing===sp?'selected':''}>${sp||'default'}</option>`).join('')}</select><div class='mt-2'>Sichtbarkeit:<br><label class='me-2 small'><input aria-label='Hide Small' type='checkbox' class='form-check-input ap-vis-hide-sm' ${targetBlock.hideSM?'checked':''}> Hide SM</label><label class='me-2 small'><input type='checkbox' aria-label='Hide Medium' class='form-check-input ap-vis-hide-md' ${targetBlock.hideMD?'checked':''}> Hide MD</label><label class='me-2 small'><input type='checkbox' aria-label='Hide Large' class='form-check-input ap-vis-hide-lg' ${targetBlock.hideLG?'checked':''}> Hide LG</label></div>`:''}${targetBlock.type==='post-link'?`<div class='mb-2 small text-muted'>Verlinkt einen bestehenden Blog Post.</div><div><strong>${escapeHtml(targetBlock.title||'(kein Post)')}</strong></div><button type='button' class='btn btn-sm btn-outline-primary w-100 mt-2 ap-cfg-pick-post'>Post auswählen</button>`:''}${targetBlock.type==='podcast-link'?`<div class='mb-2 small text-muted'>Verlinkt eine Podcast Episode.</div><div><strong>${escapeHtml(targetBlock.title||'(kein Podcast)')}</strong></div><button type='button' class='btn btn-sm btn-outline-primary w-100 mt-2 ap-cfg-pick-podcast'>Podcast auswählen</button>`:''}${targetBlock.type==='hero'?`<div class='mb-2 small text-muted'>Vollbreiter Banner ganz oben.</div><label>Bild</label><div class='input-group input-group-sm mb-1'><input aria-label='Hero Bild' type='text' class='form-control ap-cfg-hero-image' value='${targetBlock.image||''}'><button aria-label='Bild wählen' class='btn btn-outline-secondary ap-cfg-pick-hero' type='button'>Wählen</button></div><label>Titel</label><input aria-label='Titel' type='text' class='form-control form-control-sm ap-cfg-hero-title' value='${escapeHtml(targetBlock.title||'')}' /><label>Untertitel</label><input aria-label='Untertitel' type='text' class='form-control form-control-sm ap-cfg-hero-sub' value='${escapeHtml(targetBlock.subtitle||'')}' /><label>CTA Text</label><input aria-label='CTA Text' type='text' class='form-control form-control-sm ap-cfg-hero-cta-text' value='${escapeHtml(targetBlock.ctaText||'')}' /><label>CTA URL</label><input aria-label='CTA URL' type='text' class='form-control form-control-sm ap-cfg-hero-cta-url' value='${escapeHtml(targetBlock.ctaUrl||'')}' /><label>Overlay Opacity (0-1)</label><input aria-label='Overlay Opacity' type='number' step='0.05' min='0' max='1' class='form-control form-control-sm ap-cfg-hero-overlay' value='${targetBlock.overlayOpacity||0.5}'><label>Höhe (z.B. 60vh)</label><input aria-label='Höhe' type='text' class='form-control form-control-sm ap-cfg-hero-height' value='${targetBlock.height||'60vh'}'><label>Ausrichtung</label><select aria-label='Ausrichtung' class='form-select form-select-sm ap-cfg-hero-align'><option value='left' ${targetBlock.align==='left'?'selected':''}>Links</option><option value='center' ${targetBlock.align==='center'?'selected':''}>Zentriert</option><option value='right' ${targetBlock.align==='right'?'selected':''}>Rechts</option></select>`:''}</div><div class='p-2 border-top text-end'><button type='button' aria-label='Panel schließen' class='btn btn-sm btn-secondary ap-sp-close' data-close>Schließen</button></div>`; const dlg=A11yDialog.create({ label:'Block Konfiguration '+(targetBlock.type||''), className:'ap-config-sidepanel', html, closeSelector:'[data-close]' }); const panel=dlg.el; dlg.mount(); panel.addEventListener('change',()=>{ if(targetBlock.type==='image'){ targetBlock.src=panel.querySelector('.ap-cfg-src').value.trim(); targetBlock.alt=panel.querySelector('.ap-cfg-alt').value.trim(); targetBlock.caption=panel.querySelector('.ap-cfg-caption').value.trim(); } else if(targetBlock.type==='background'){ targetBlock.bgColor=panel.querySelector('.ap-cfg-bg').value; } else if(targetBlock.type==='html'||targetBlock.type==='text'){ targetBlock.textColor=panel.querySelector('.ap-cfg-textcolor').value; targetBlock.bgColor=panel.querySelector('.ap-cfg-bgc').value; targetBlock.classes=panel.querySelector('.ap-cfg-classes').value.trim(); targetBlock.spacing=panel.querySelector('.ap-cfg-spacing').value; targetBlock.hideSM=panel.querySelector('.ap-vis-hide-sm').checked; targetBlock.hideMD=panel.querySelector('.ap-vis-hide-md').checked; targetBlock.hideLG=panel.querySelector('.ap-vis-hide-lg').checked; } else if(targetBlock.type==='hero'){ targetBlock.image=panel.querySelector('.ap-cfg-hero-image').value.trim(); targetBlock.title=panel.querySelector('.ap-cfg-hero-title').value; targetBlock.subtitle=panel.querySelector('.ap-cfg-hero-sub').value; targetBlock.ctaText=panel.querySelector('.ap-cfg-hero-cta-text').value; targetBlock.ctaUrl=panel.querySelector('.ap-cfg-hero-cta-url').value; targetBlock.overlayOpacity=parseFloat(panel.querySelector('.ap-cfg-hero-overlay').value)||0; targetBlock.height=panel.querySelector('.ap-cfg-hero-height').value.trim()||'60vh'; targetBlock.align=panel.querySelector('.ap-cfg-hero-align').value; } render(); capture(); }); if(targetBlock.type==='image'){ panel.querySelector('.ap-cfg-pick').addEventListener('click',()=>{ if(window.Pickers){ Pickers.media({ type:'image' }).then(item=>{ targetBlock.src=item.path; if(item.alt_text) targetBlock.alt=item.alt_text; render(); capture(); }).catch(()=>{}); } }); } else if(targetBlock.type==='hero'){ panel.querySelector('.ap-cfg-pick-hero').addEventListener('click',()=>{ if(window.Pickers){ Pickers.media({ type:'image' }).then(item=>{ targetBlock.image=item.path; render(); capture(); }).catch(()=>{}); } }); } else if(targetBlock.type==='post-link'){ panel.querySelector('.ap-cfg-pick-post').addEventListener('click',()=>{ if(window.Pickers){ Pickers.post().then(p=>{ targetBlock.postId=p.id; targetBlock.title=p.title; targetBlock.slug=p.slug; targetBlock.excerpt=p.excerpt||''; render(); capture(); }).catch(()=>{}); } }); } else if(targetBlock.type==='podcast-link'){ panel.querySelector('.ap-cfg-pick-podcast').addEventListener('click',()=>{ if(window.Pickers){ Pickers.podcast().then(p=>{ targetBlock.podcastId=p.id; targetBlock.title=p.title; targetBlock.description=p.description||''; render(); capture(); }).catch(()=>{}); } }); } }

  // JSON toggle
  jsonToggleBtn&&jsonToggleBtn.addEventListener('click',()=>{ jsonWrapper.classList.toggle('d-none'); if(!jsonWrapper.classList.contains('d-none')) jsonTextarea.value=serialize(); });
  jsonTextarea&&jsonTextarea.addEventListener('change',()=>{ try { const obj=JSON.parse(jsonTextarea.value); if(obj&&obj.rows){ layout.rows=obj.rows; render(); capture(); } } catch(e){ alert('Ungültiges JSON'); } });
  document.querySelectorAll('.ap-add-row').forEach(btn=> btn.addEventListener('click',()=> addRow(btn.dataset.preset)));
  const form=document.getElementById('advancedPageForm'); form.addEventListener('submit',()=>{ syncHidden(); localStorage.removeItem(AUTOSAVE_KEY); });

  render(); capture();

  function cloneBlockById(blockId){ for(let r=0;r<layout.rows.length;r++){ for(let c=0;c<layout.rows[r].columns.length;c++){ const col=layout.rows[r].columns[c]; const idx=col.blocks.findIndex(b=>b.id===blockId); if(idx>-1){ const original=col.blocks[idx]; const copy=JSON.parse(JSON.stringify(original)); copy.id='b'+Date.now()+Math.floor(Math.random()*1000); col.blocks.splice(idx+1,0,copy); render(); capture(); return; } } } }
  function moveBlock(blockId,dir){ const pos=findBlockPosition(blockId); if(!pos) return; const col=layout.rows[pos.row].columns[pos.col]; const ni=pos.index+dir; if(ni<0||ni>=col.blocks.length) return; const [blk]=col.blocks.splice(pos.index,1); col.blocks.splice(ni,0,blk); render(); capture(); }

  // Drag & Drop
  let dragData=null; builderEl.addEventListener('dragstart', e=>{ const blk=e.target.closest('.ap-block'); if(!blk) return; blk.classList.add('ap-block-dragging'); const id=blk.getAttribute('data-block'); const pos=findBlockPosition(id); if(!pos) return; dragData=pos; e.dataTransfer.effectAllowed='move'; }); builderEl.addEventListener('dragend', e=>{ const blk=e.target.closest('.ap-block'); if(blk) blk.classList.remove('ap-block-dragging'); document.querySelectorAll('.ap-block-drag-over').forEach(x=>x.classList.remove('ap-block-drag-over')); }); builderEl.addEventListener('dragover', e=>{ const blk=e.target.closest('.ap-block'); if(blk){ e.preventDefault(); blk.classList.add('ap-block-drag-over'); } }); builderEl.addEventListener('dragleave', e=>{ const blk=e.target.closest('.ap-block'); if(blk) blk.classList.remove('ap-block-drag-over'); }); builderEl.addEventListener('drop', e=>{ const targetBlk=e.target.closest('.ap-block'); if(!targetBlk||!dragData) return; e.preventDefault(); const targetId=targetBlk.getAttribute('data-block'); const targetPos=findBlockPosition(targetId); if(!targetPos) return; const srcCol=layout.rows[dragData.row].columns[dragData.col]; const [moved]=srcCol.blocks.splice(dragData.index,1); if(dragData.row===targetPos.row && dragData.col===targetPos.col){ let insertIndex=targetPos.index; if(dragData.index<targetPos.index) insertIndex--; srcCol.blocks.splice(insertIndex,0,moved); } else { const tgtCol=layout.rows[targetPos.row].columns[targetPos.col]; tgtCol.blocks.splice(targetPos.index,0,moved); } dragData=null; render(); capture(); });
  function findBlockPosition(id){ for(let r=0;r<layout.rows.length;r++){ const row=layout.rows[r]; for(let c=0;c<row.columns.length;c++){ const col=row.columns[c]; const idx=col.blocks.findIndex(b=>b.id===id); if(idx>-1) return {row:r,col:c,index:idx}; } } return null; }

  // Legacy individual picker implementations removed; using Pickers (media/post/podcast)

  function escapeHtml(str){ return (str||'').replace(/[&<>"']/g,c=>({"&":"&amp;","<":"&lt;",">":"&gt;","\"":"&quot;","'":"&#39;"}[c]||c)); }

  // Keyboard shortcuts
  document.addEventListener('keydown',e=>{ if((e.ctrlKey||e.metaKey)&&e.key.toLowerCase()==='s'){ e.preventDefault(); syncHidden(); try{ document.getElementById('advancedPageForm').submit(); }catch(_){}} else if((e.ctrlKey||e.metaKey)&&e.key.toLowerCase()==='z'){ e.preventDefault(); const prev=history.undo(); if(prev){ layout.rows=prev.rows; render(); } } else if((e.ctrlKey||e.metaKey)&&(e.key.toLowerCase()==='y' || (e.shiftKey && e.key.toLowerCase()==='z'))){ e.preventDefault(); const next=history.redo(); if(next){ layout.rows=next.rows; render(); } } });

  // Undo/Redo buttons & Templates
  if(controlsBar){ const undo=document.createElement('button'); undo.type='button'; undo.className='btn btn-sm btn-outline-secondary ap-btn-undo'; undo.textContent=i18n.undo||'Undo'; const redo=document.createElement('button'); redo.type='button'; redo.className='btn btn-sm btn-outline-secondary ap-btn-redo'; redo.textContent=i18n.redo||'Redo'; const tpl=document.createElement('select'); tpl.className='form-select form-select-sm w-auto ap-template-select'; const templates={ 'hero+two-cols': { version:2, rows:[ { preset:'full', columns:[ { width:12, blocks:[ { id:'t'+Date.now(), type:'hero', title:'Hero Titel', subtitle:'Kurzer Untertitel', image:'/uploads/Panda_Banner.png', ctaText:'Mehr', ctaUrl:'#', overlayOpacity:0.5, height:'60vh', align:'center' } ] } ] }, { preset:'two-equal', columns:[ { width:6, blocks:[ { id:'t'+(Date.now()+1), type:'text', html:'<h3>Spalte 1</h3><p>Inhalt…</p>' } ] }, { width:6, blocks:[ { id:'t'+(Date.now()+2), type:'text', html:'<h3>Spalte 2</h3><p>Inhalt…</p>' } ] } ] } ] }, 'posts+cta': { version:2, rows:[ { preset:'three', columns:[ { width:4, blocks:[ { id:'t'+Date.now(), type:'post-link', title:'(Post 1)', postId:null } ] }, { width:4, blocks:[ { id:'t'+(Date.now()+1), type:'post-link', title:'(Post 2)', postId:null } ] }, { width:4, blocks:[ { id:'t'+(Date.now()+2), type:'post-link', title:'(Post 3)', postId:null } ] } ] }, { preset:'full', columns:[ { width:12, blocks:[ { id:'t'+(Date.now()+3), type:'text', html:'<div class="text-center"><a class="btn btn-primary btn-lg" href="#">Call To Action</a></div>' } ] } ] } ] } }; tpl.innerHTML='<option value="">Template…</option>'+Object.keys(templates).map(k=>`<option value='${k}'>${k}</option>`).join(''); controlsBar.appendChild(undo); controlsBar.appendChild(redo); controlsBar.appendChild(tpl); undo.addEventListener('click',()=>{ const prev=history.undo(); if(prev){ layout.rows=prev.rows; render(); } }); redo.addEventListener('click',()=>{ const next=history.redo(); if(next){ layout.rows=next.rows; render(); } }); tpl.addEventListener('change',()=>{ const key=tpl.value; if(!key) return; if(layout.rows.length && !confirm('Template anwenden und aktuelles Layout ersetzen?')){ tpl.value=''; return; } const snap=JSON.parse(JSON.stringify(templates[key])); layout.rows=snap.rows; render(); capture(); tpl.value=''; }); }
  function updateUndoRedoButtons(){ const u=document.querySelector('.ap-btn-undo'); const r=document.querySelector('.ap-btn-redo'); if(!u||!r) return; u.disabled=!history.canUndo(); r.disabled=!history.canRedo(); }
})();
